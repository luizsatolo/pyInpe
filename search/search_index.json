{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to pyinpe","text":"<p>A python package demo for environmental data</p> <ul> <li>Free software: MIT License</li> <li>Documentation: https://luizsatolo.github.io/pyinpe</li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li>TODO</li> </ul>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#v001-date","title":"v0.0.1 - Date","text":"<p>Improvement:</p> <ul> <li>TBD</li> </ul> <p>New Features:</p> <ul> <li>TBD</li> </ul>"},{"location":"common/","title":"common module","text":"<p>The common module contains common functions and classes used by the other modules.</p>"},{"location":"contributing/","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/luizsatolo/pyinpe/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with <code>bug</code> and <code>help wanted</code> is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with <code>enhancement</code> and <code>help wanted</code> is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>pyinpe could always use more documentation, whether as part of the official pyinpe docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/luizsatolo/pyinpe/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up pyinpe for local development.</p> <ol> <li> <p>Fork the pyinpe repo on GitHub.</p> </li> <li> <p>Clone your fork locally:</p> <pre><code>$ git clone git@github.com:your_name_here/pyinpe.git\n</code></pre> </li> <li> <p>Install your local copy into a virtualenv. Assuming you have     virtualenvwrapper installed, this is how you set up your fork for     local development:</p> <pre><code>$ mkvirtualenv pyinpe\n$ cd pyinpe/\n$ python setup.py develop\n</code></pre> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> </li> <li> <p>When you're done making changes, check that your changes pass flake8     and the tests, including testing other Python versions with tox:</p> <pre><code>$ flake8 pyinpe tests\n$ python setup.py test or pytest\n$ tox\n</code></pre> <p>To get flake8 and tox, just pip install them into your virtualenv.</p> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated.     Put your new functionality into a function with a docstring, and add     the feature to the list in README.rst.</li> <li>The pull request should work for Python 3.8 and later, and     for PyPy. Check https://github.com/luizsatolo/pyinpe/pull_requests and make sure that the tests pass for all     supported Python versions.</li> </ol>"},{"location":"faq/","title":"FAQ","text":""},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#stable-release","title":"Stable release","text":"<p>To install pyinpe, run this command in your terminal:</p> <pre><code>pip install pyinpe\n</code></pre> <p>This is the preferred method to install pyinpe, as it will always install the most recent stable release.</p> <p>If you don't have pip installed, this Python installation guide can guide you through the process.</p>"},{"location":"installation/#from-sources","title":"From sources","text":"<p>To install pyinpe from sources, run this command in your terminal:</p> <pre><code>pip install git+https://github.com/luizsatolo/pyinpe\n</code></pre>"},{"location":"pyinpe/","title":"pyinpe module","text":"<p>Main module.</p>"},{"location":"pyinpe/#pyinpe.pyinpe.get_contents","title":"<code>get_contents(driver='wfs', version='2.0.0', database='queimadas')</code>","text":"<p>Returns the contents of the database in the driver</p> Source code in <code>pyinpe/pyinpe.py</code> <pre><code>def get_contents(driver='wfs', version='2.0.0', database='queimadas'):\n    \"\"\"Returns the contents of the database in the driver\n    \"\"\"\n    if driver == 'wfs':\n        if database == 'queimadas':\n            wfs_url = 'https://terrabrasilis.dpi.inpe.br/queimadas/geoserver/wfs'\n            wfs = WebFeatureService(wfs_url, version=version)\n            return list(wfs.contents)\n        else:\n            return print('Database not found')\n    else:\n        return print('Driver not available')\n</code></pre>"},{"location":"usage/","title":"Usage","text":"<p>To use pyinpe in a project:</p> <pre><code>import pyinpe\n</code></pre>"},{"location":"examples/intro/","title":"Intro","text":"In\u00a0[1]: Copied! <pre>!pip install pyinpe\nfrom pyinpe.WFS import get_contents, get_collectionSchema\n\n# Get collections at INPE's Queimadas WFS\nget_contents()\n\n# Get schema of collection 'dados_abertos:focos_2023_br_satref' from INPE's Queimadas\nget_collectionSchema()\n\n# Get collections at INPE's DETER Cerrado WFS\nget_contents(database = 'deter_cerrado')\n\n# Get schema of collection 'deter-cerrado:deter_cerrado' from INPE's DETER Cerrado\nget_collectionSchema(database = 'deter_cerrado', collection = 'deter-cerrado:deter_cerrado')\n</pre> !pip install pyinpe from pyinpe.WFS import get_contents, get_collectionSchema  # Get collections at INPE's Queimadas WFS get_contents()  # Get schema of collection 'dados_abertos:focos_2023_br_satref' from INPE's Queimadas get_collectionSchema()  # Get collections at INPE's DETER Cerrado WFS get_contents(database = 'deter_cerrado')  # Get schema of collection 'deter-cerrado:deter_cerrado' from INPE's DETER Cerrado get_collectionSchema(database = 'deter_cerrado', collection = 'deter-cerrado:deter_cerrado') <pre>Requirement already satisfied: pyinpe in /opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages (0.0.2)\r\nRequirement already satisfied: numpy in /home/runner/.local/lib/python3.11/site-packages (from pyinpe) (2.0.0)\r\nRequirement already satisfied: owslib in /home/runner/.local/lib/python3.11/site-packages (from pyinpe) (0.31.0)\r\nRequirement already satisfied: lxml in /home/runner/.local/lib/python3.11/site-packages (from owslib-&gt;pyinpe) (5.2.2)\r\nRequirement already satisfied: python-dateutil&gt;=1.5 in /home/runner/.local/lib/python3.11/site-packages (from owslib-&gt;pyinpe) (2.9.0.post0)\r\nRequirement already satisfied: pytz in /home/runner/.local/lib/python3.11/site-packages (from owslib-&gt;pyinpe) (2024.1)\r\nRequirement already satisfied: pyyaml in /home/runner/.local/lib/python3.11/site-packages (from owslib-&gt;pyinpe) (6.0.1)\r\nRequirement already satisfied: requests&gt;=1.0 in /home/runner/.local/lib/python3.11/site-packages (from owslib-&gt;pyinpe) (2.32.3)\r\nRequirement already satisfied: six&gt;=1.5 in /home/runner/.local/lib/python3.11/site-packages (from python-dateutil&gt;=1.5-&gt;owslib-&gt;pyinpe) (1.16.0)\r\nRequirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /home/runner/.local/lib/python3.11/site-packages (from requests&gt;=1.0-&gt;owslib-&gt;pyinpe) (3.3.2)\r\n</pre> <pre>Requirement already satisfied: idna&lt;4,&gt;=2.5 in /home/runner/.local/lib/python3.11/site-packages (from requests&gt;=1.0-&gt;owslib-&gt;pyinpe) (3.7)\r\nRequirement already satisfied: urllib3&lt;3,&gt;=1.21.1 in /home/runner/.local/lib/python3.11/site-packages (from requests&gt;=1.0-&gt;owslib-&gt;pyinpe) (2.2.2)\r\nRequirement already satisfied: certifi&gt;=2017.4.17 in /home/runner/.local/lib/python3.11/site-packages (from requests&gt;=1.0-&gt;owslib-&gt;pyinpe) (2024.7.4)\r\n</pre> <pre>pyproj not installed\n</pre> Out[1]: <pre>{'properties': {'gid': 'string',\n  'classname': 'string',\n  'quadrant': 'string',\n  'path_row': 'string',\n  'view_date': 'date',\n  'created_date': 'date',\n  'sensor': 'string',\n  'satellite': 'string',\n  'areatotalkm': 'double',\n  'areauckm': 'double',\n  'uc': 'string',\n  'areamunkm': 'double',\n  'municipality': 'string',\n  'uf': 'string',\n  'publish_month': 'date'},\n 'required': [],\n 'geometry': '3D MultiPolygon',\n 'geometry_column': 'st_multi'}</pre>"}]}